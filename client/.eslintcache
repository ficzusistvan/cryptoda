[{"C:\\_MyProjects\\cryptoda\\client\\src\\App.js":"1","C:\\_MyProjects\\cryptoda\\client\\src\\redux\\reducers\\index.js":"2","C:\\_MyProjects\\cryptoda\\client\\src\\redux\\actions\\testConfigs.js":"3","C:\\_MyProjects\\cryptoda\\client\\src\\reportWebVitals.js":"4","C:\\_MyProjects\\cryptoda\\client\\src\\pages\\Rates.page.js":"5","C:\\_MyProjects\\cryptoda\\client\\src\\components\\Test.component.js":"6","C:\\_MyProjects\\cryptoda\\client\\src\\redux\\actions\\types.js":"7","C:\\_MyProjects\\cryptoda\\client\\src\\pages\\Portfolio.page.js":"8","C:\\_MyProjects\\cryptoda\\client\\src\\index.js":"9","C:\\_MyProjects\\cryptoda\\client\\src\\redux\\reducers\\testReducer.js":"10","C:\\_MyProjects\\cryptoda\\client\\src\\pages\\Investments.page.js":"11","C:\\_MyProjects\\cryptoda\\client\\src\\redux\\store.js":"12","C:\\_MyProjects\\cryptoda\\client\\src\\pages\\Home.page.js":"13","C:\\_MyProjects\\cryptoda\\client\\src\\layout-parts\\ContextMenu.js":"14","C:\\_MyProjects\\cryptoda\\client\\src\\layout-parts\\Main.js":"15","C:\\_MyProjects\\cryptoda\\client\\src\\layout-parts\\Navigation.js":"16","C:\\_MyProjects\\cryptoda\\client\\src\\redux\\containers\\test.redux.js":"17","C:\\_MyProjects\\cryptoda\\client\\src\\components\\ResizableBox.js":"18","C:\\_MyProjects\\cryptoda\\client\\src\\pages\\PortfolioHistory.page.js":"19","C:\\_MyProjects\\cryptoda\\client\\src\\pages\\WalletsConfig.page.js":"20","C:\\_MyProjects\\cryptoda\\client\\src\\pages\\DCAConfig.page.js":"21","C:\\_MyProjects\\cryptoda\\client\\src\\components\\investments.table.js":"22","C:\\_MyProjects\\cryptoda\\client\\src\\components\\portfolio.table.js":"23","C:\\_MyProjects\\cryptoda\\client\\src\\components\\rates.table.js":"24","C:\\_MyProjects\\cryptoda\\client\\src\\components\\balancer.table.js":"25"},{"size":554,"mtime":1615805892733,"results":"26","hashOfConfig":"27"},{"size":138,"mtime":1612256236016,"results":"28","hashOfConfig":"27"},{"size":98,"mtime":1612256425356,"results":"29","hashOfConfig":"27"},{"size":362,"mtime":1606206756018,"results":"30","hashOfConfig":"27"},{"size":1121,"mtime":1617181620536,"results":"31","hashOfConfig":"27"},{"size":115,"mtime":1612816706579,"results":"32","hashOfConfig":"27"},{"size":35,"mtime":1612256373193,"results":"33","hashOfConfig":"27"},{"size":3140,"mtime":1617181560028,"results":"34","hashOfConfig":"27"},{"size":809,"mtime":1615542685453,"results":"35","hashOfConfig":"27"},{"size":237,"mtime":1612256491086,"results":"36","hashOfConfig":"27"},{"size":3503,"mtime":1617263949033,"results":"37","hashOfConfig":"27"},{"size":197,"mtime":1574442955932,"results":"38","hashOfConfig":"27"},{"size":380,"mtime":1617181656726,"results":"39","hashOfConfig":"27"},{"size":396,"mtime":1617272964698,"results":"40","hashOfConfig":"27"},{"size":1128,"mtime":1616587782232,"results":"41","hashOfConfig":"27"},{"size":2027,"mtime":1617274908033,"results":"42","hashOfConfig":"27"},{"size":455,"mtime":1612259025074,"results":"43","hashOfConfig":"27"},{"size":915,"mtime":1617172504025,"results":"44","hashOfConfig":"27"},{"size":2242,"mtime":1617175187897,"results":"45","hashOfConfig":"27"},{"size":2730,"mtime":1617181598006,"results":"46","hashOfConfig":"27"},{"size":3095,"mtime":1617275268459,"results":"47","hashOfConfig":"27"},{"size":3571,"mtime":1617181489386,"results":"48","hashOfConfig":"27"},{"size":4969,"mtime":1617181500664,"results":"49","hashOfConfig":"27"},{"size":8322,"mtime":1617181511445,"results":"50","hashOfConfig":"27"},{"size":3380,"mtime":1617181475739,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"66gjgi",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\_MyProjects\\cryptoda\\client\\src\\App.js",["113"],"import React from 'react';\nimport LeftSidebarRedux from './redux/containers/test.redux';\nimport { Container, Row, Col } from 'reactstrap';\nimport Main from './layout-parts/Main';\nimport Navigation from './layout-parts/Navigation';\nimport ContextMenu from './layout-parts/ContextMenu';\n\nconst App = () => (\n  <div>\n    <Navigation />\n    <Container fluid={true} >\n      <Row>\n        <Col sm=\"2\">\n          <ContextMenu />\n        </Col>\n        <Col sm=\"10\">\n          <Main />\n        </Col>\n      </Row>\n    </Container>\n  </div>\n)\n\nexport default App;",["114","115"],"C:\\_MyProjects\\cryptoda\\client\\src\\redux\\reducers\\index.js",[],["116","117"],"C:\\_MyProjects\\cryptoda\\client\\src\\redux\\actions\\testConfigs.js",[],["118","119"],"C:\\_MyProjects\\cryptoda\\client\\src\\reportWebVitals.js",[],["120","121"],"C:\\_MyProjects\\cryptoda\\client\\src\\pages\\Rates.page.js",["122"],"C:\\_MyProjects\\cryptoda\\client\\src\\components\\Test.component.js",[],"C:\\_MyProjects\\cryptoda\\client\\src\\redux\\actions\\types.js",[],["123","124"],"C:\\_MyProjects\\cryptoda\\client\\src\\pages\\Portfolio.page.js",["125","126"],"C:\\_MyProjects\\cryptoda\\client\\src\\index.js",[],["127","128"],"C:\\_MyProjects\\cryptoda\\client\\src\\redux\\reducers\\testReducer.js",[],"C:\\_MyProjects\\cryptoda\\client\\src\\pages\\Investments.page.js",[],"C:\\_MyProjects\\cryptoda\\client\\src\\redux\\store.js",[],"C:\\_MyProjects\\cryptoda\\client\\src\\pages\\Home.page.js",["129","130","131","132","133","134","135","136","137"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\"\r\nimport { Form, FormGroup, Label, Input, Row, Col, Button, Jumbotron } from 'reactstrap'\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function Home() {\r\n  \r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h1>HomePage</h1>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}","C:\\_MyProjects\\cryptoda\\client\\src\\layout-parts\\ContextMenu.js",["138","139"],"import React from 'react';\r\nimport { Row, Col, Button } from 'reactstrap';\r\nimport './ContextMenu.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ContextMenu extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className='left-sidebar-1'>\r\n          <Col>\r\n            \r\n          </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContextMenu;","C:\\_MyProjects\\cryptoda\\client\\src\\layout-parts\\Main.js",["140"],"import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport TestRedux from '../redux/containers/test.redux';\r\nimport { Row, Col } from 'reactstrap';\r\nimport './Main.css';\r\nimport HomePage from '../pages/Home.page';\r\nimport RatesPage from '../pages/Rates.page';\r\nimport PortfolioPage from '../pages/Portfolio.page';\r\nimport InvestmentsPage from '../pages/Investments.page';\r\nimport BalancerPage from '../pages/Balancer.page';\r\nimport DCAPage from '../pages/DCA.page';\r\nimport WalletPage from '../pages/Wallet.page';\r\n\r\nconst Main = () => (\r\n  <Row className='main'>\r\n    <Col>\r\n      <Switch>\r\n        <Route exact path='/' component={HomePage} />\r\n        <Route exact path='/rates' component={RatesPage} />\r\n        <Route exact path='/portfolio' component={PortfolioPage} />\r\n        <Route exact path='/investments' component={InvestmentsPage} />\r\n        <Route exact path='/balancer' component={BalancerPage} />\r\n        <Route exact path='/dca' component={DCAPage} />\r\n        <Route exact path='/wallet' component={WalletPage} />\r\n      </Switch>\r\n    </Col>\r\n  </Row>\r\n)\r\n\r\nexport default Main;","C:\\_MyProjects\\cryptoda\\client\\src\\layout-parts\\Navigation.js",[],"C:\\_MyProjects\\cryptoda\\client\\src\\redux\\containers\\test.redux.js",[],"C:\\_MyProjects\\cryptoda\\client\\src\\components\\ResizableBox.js",[],"C:\\_MyProjects\\cryptoda\\client\\src\\pages\\PortfolioHistory.page.js",["141","142"],"C:\\_MyProjects\\cryptoda\\client\\src\\pages\\WalletsConfig.page.js",["143","144","145","146","147","148","149","150","151"],"C:\\_MyProjects\\cryptoda\\client\\src\\pages\\DCAConfig.page.js",["152","153"],"C:\\_MyProjects\\cryptoda\\client\\src\\components\\investments.table.js",[],"C:\\_MyProjects\\cryptoda\\client\\src\\components\\portfolio.table.js",[],"C:\\_MyProjects\\cryptoda\\client\\src\\components\\rates.table.js",["154"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTable, usePagination } from 'react-table'\r\nimport NumberFormat from 'react-number-format';\r\nimport { Progress } from 'reactstrap';\r\n\r\n// Create a default prop getter\r\nconst defaultPropGetter = () => ({})\r\n\r\nexport default function ListingTable({ data, fetchData, loading, pageCount: controlledPageCount, getCellProps = defaultPropGetter }) {\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Rank',\r\n        accessor: 'cmc_rank'\r\n      },\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name', // accessor is the \"key\" in the data\r\n        Cell: ({ row }) => (\r\n          <Link href={`/cryptos/${row.values.symbol}`}>\r\n            <a>{row.values.name}</a>\r\n          </Link>\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Symbol',\r\n        accessor: 'symbol',\r\n      },\r\n      {\r\n        Header: 'Market capitalization',\r\n        accessor: 'quote.USD.market_cap',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['quote.USD.market_cap']} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Circulating supply',\r\n        accessor: 'circulating_supply',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values.circulating_supply} displayType={'text'} thousandSeparator={true} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Total supply',\r\n        accessor: 'total_supply',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values.total_supply} displayType={'text'} thousandSeparator={true} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Max supply',\r\n        accessor: 'max_supply',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values.max_supply} displayType={'text'} thousandSeparator={true} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Price',\r\n        accessor: 'quote.USD.price',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['quote.USD.price']} displayType={'text'} thousandSeparator={true} prefix={'$'} decimalScale={2} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Volume 24h',\r\n        accessor: 'quote.USD.volume_24h',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['quote.USD.volume_24h']} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n        },\r\n      },\r\n      {\r\n        Header: '%1h',\r\n        accessor: 'quote.USD.percent_change_1h',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['quote.USD.percent_change_1h']} displayType={'text'} thousandSeparator={true} suffix={'%'} decimalScale={2} />\r\n        },\r\n      },\r\n      {\r\n        Header: '%24h',\r\n        accessor: 'quote.USD.percent_change_24h',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['quote.USD.percent_change_24h']} displayType={'text'} thousandSeparator={true} prefix={'%'} decimalScale={2} />\r\n        },\r\n      },\r\n      {\r\n        Header: '%7d',\r\n        accessor: 'quote.USD.percent_change_7d',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['quote.USD.percent_change_7d']} displayType={'text'} thousandSeparator={true} prefix={'%'} decimalScale={2} />\r\n        },\r\n      }\r\n    ],\r\n    []\r\n  )\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    // Get the state from the instance\r\n    state: { pageIndex, pageSize },\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n    initialState: { pageIndex: 0 }, // Pass our hoisted table state\r\n    manualPagination: true, // Tell the usePagination\r\n    // hook that we'll handle our own data fetching\r\n    // This means we'll also have to provide our own\r\n    // pageCount.\r\n    pageCount: controlledPageCount,\r\n  },\r\n    usePagination\r\n  )\r\n\r\n  // Listen for changes in pagination and use the state to fetch our new data\r\n  useEffect(() => {\r\n    fetchData({ pageIndex, pageSize })\r\n  }, [fetchData, pageIndex, pageSize])\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      {/*<pre>\r\n        <code>\r\n          {JSON.stringify(\r\n            {\r\n              pageIndex,\r\n              pageSize,\r\n              pageCount,\r\n              canNextPage,\r\n              canPreviousPage,\r\n            },\r\n            null,\r\n            2\r\n          )}\r\n        </code>\r\n          </pre>*/}\r\n      <div>\r\n        <table {...getTableProps()} className=\"table table-hover\" size=\"small\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th scope=\"col\" {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr className=\"table-primary\" {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps([\r\n                      {\r\n                        className:\r\n                          cell.column.id === 'symbol' ? \"text-info\"\r\n                            : cell.column.id === 'quote.USD.price' ? \"text-info\"\r\n                              : cell.column.id === 'quote.USD.percent_change_1h' ? cell.value >= 0 ? \"text-success\" : \"text-danger\"\r\n                                : cell.column.id === 'quote.USD.percent_change_24h' ? cell.value >= 0 ? \"text-success\" : \"text-danger\"\r\n                                  : cell.column.id === 'quote.USD.percent_change_7d' ? cell.value >= 0 ? \"text-success\" : \"text-danger\"\r\n                                    : cell.column.className\r\n                      },\r\n                      getCellProps(cell),\r\n                    ])}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n            <tr>\r\n              {loading ? (\r\n                // Use our custom loading state to show a loading indicator\r\n                <td colSpan=\"10000\">Loading...</td>\r\n              ) : (\r\n                <td colSpan=\"10000\">\r\n                  Showing {page.length} of ~{controlledPageCount * pageSize}{' '}\r\n                results\r\n                </td>\r\n              )}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div>\r\n        <div className=\"text-center\">Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong></div>\r\n        <Progress min={0} value={pageIndex + 1} max={pageOptions.length} />\r\n      </div>\r\n\r\n      <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>{`<<`}</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>{`<`}</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => nextPage()} disabled={!canNextPage}>{`>`}</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>{`>>`}</button>\r\n      </div>\r\n      <span>\r\n        {' '}| Go to page:{' '}\r\n        <input\r\n          type=\"number\"\r\n          defaultValue={pageIndex + 1}\r\n          onChange={e => {\r\n            const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n            gotoPage(page)\r\n          }}\r\n          style={{ width: '100px' }}\r\n        />\r\n      </span>{' '}\r\n      <select\r\n        value={pageSize}\r\n        onChange={e => {\r\n          setPageSize(Number(e.target.value))\r\n        }}\r\n      >\r\n        {[10, 20, 30, 40, 50].map(pageSize => (\r\n          <option key={pageSize} value={pageSize}>\r\n            Show {pageSize}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n    </>\r\n  )\r\n}","C:\\_MyProjects\\cryptoda\\client\\src\\components\\balancer.table.js",[],{"ruleId":"155","severity":1,"message":"156","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":24},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"159","replacedBy":"163"},{"ruleId":"161","replacedBy":"164"},{"ruleId":"159","replacedBy":"165"},{"ruleId":"161","replacedBy":"166"},{"ruleId":"159","replacedBy":"167"},{"ruleId":"161","replacedBy":"168"},{"ruleId":"155","severity":1,"message":"169","line":14,"column":11,"nodeType":"157","messageId":"158","endLine":14,"endColumn":18},{"ruleId":"159","replacedBy":"170"},{"ruleId":"161","replacedBy":"171"},{"ruleId":"155","severity":1,"message":"172","line":2,"column":39,"nodeType":"157","messageId":"158","endLine":2,"endColumn":46},{"ruleId":"155","severity":1,"message":"173","line":61,"column":13,"nodeType":"157","messageId":"158","endLine":61,"endColumn":37},{"ruleId":"159","replacedBy":"174"},{"ruleId":"161","replacedBy":"175"},{"ruleId":"155","severity":1,"message":"176","line":1,"column":8,"nodeType":"157","messageId":"158","endLine":1,"endColumn":13},{"ruleId":"155","severity":1,"message":"177","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":19},{"ruleId":"155","severity":1,"message":"178","line":2,"column":21,"nodeType":"157","messageId":"158","endLine":2,"endColumn":29},{"ruleId":"155","severity":1,"message":"179","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":14},{"ruleId":"155","severity":1,"message":"180","line":3,"column":16,"nodeType":"157","messageId":"158","endLine":3,"endColumn":25},{"ruleId":"155","severity":1,"message":"181","line":3,"column":27,"nodeType":"157","messageId":"158","endLine":3,"endColumn":32},{"ruleId":"155","severity":1,"message":"182","line":3,"column":34,"nodeType":"157","messageId":"158","endLine":3,"endColumn":39},{"ruleId":"155","severity":1,"message":"183","line":3,"column":51,"nodeType":"157","messageId":"158","endLine":3,"endColumn":57},{"ruleId":"155","severity":1,"message":"184","line":3,"column":59,"nodeType":"157","messageId":"158","endLine":3,"endColumn":68},{"ruleId":"155","severity":1,"message":"183","line":2,"column":20,"nodeType":"157","messageId":"158","endLine":2,"endColumn":26},{"ruleId":"155","severity":1,"message":"185","line":4,"column":10,"nodeType":"157","messageId":"158","endLine":4,"endColumn":14},{"ruleId":"155","severity":1,"message":"186","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":17},{"ruleId":"155","severity":1,"message":"187","line":10,"column":10,"nodeType":"157","messageId":"158","endLine":10,"endColumn":17},{"ruleId":"155","severity":1,"message":"188","line":12,"column":9,"nodeType":"157","messageId":"158","endLine":12,"endColumn":18},{"ruleId":"155","severity":1,"message":"179","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":14},{"ruleId":"155","severity":1,"message":"180","line":3,"column":16,"nodeType":"157","messageId":"158","endLine":3,"endColumn":25},{"ruleId":"155","severity":1,"message":"181","line":3,"column":27,"nodeType":"157","messageId":"158","endLine":3,"endColumn":32},{"ruleId":"155","severity":1,"message":"182","line":3,"column":34,"nodeType":"157","messageId":"158","endLine":3,"endColumn":39},{"ruleId":"155","severity":1,"message":"183","line":3,"column":51,"nodeType":"157","messageId":"158","endLine":3,"endColumn":57},{"ruleId":"155","severity":1,"message":"184","line":3,"column":59,"nodeType":"157","messageId":"158","endLine":3,"endColumn":68},{"ruleId":"155","severity":1,"message":"189","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":20},{"ruleId":"155","severity":1,"message":"187","line":13,"column":10,"nodeType":"157","messageId":"158","endLine":13,"endColumn":17},{"ruleId":"190","severity":1,"message":"191","line":29,"column":6,"nodeType":"192","endLine":29,"endColumn":8,"suggestions":"193"},{"ruleId":"155","severity":1,"message":"184","line":3,"column":59,"nodeType":"157","messageId":"158","endLine":3,"endColumn":68},{"ruleId":"155","severity":1,"message":"194","line":3,"column":70,"nodeType":"157","messageId":"158","endLine":3,"endColumn":79},{"ruleId":"195","severity":1,"message":"196","line":23,"column":13,"nodeType":"197","endLine":23,"endColumn":16},"no-unused-vars","'LeftSidebarRedux' is defined but never used.","Identifier","unusedVar","no-native-reassign",["198"],"no-negated-in-lhs",["199"],["198"],["199"],["198"],["199"],["198"],["199"],"'fetchId' is assigned a value but never used.",["198"],["199"],"'useMemo' is defined but never used.","'forcePortfolioUpdateResp' is assigned a value but never used.",["198"],["199"],"'axios' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Jumbotron' is defined but never used.","'Link' is defined but never used.","'TestRedux' is defined but never used.","'loading' is assigned a value but never used.","'THIS_USER' is assigned a value but never used.","'NumberFormat' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'USER'. Either include it or remove the dependency array.","ArrayExpression",["200"],"'Container' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},"Update the dependencies array to be: [USER]",{"range":"203","text":"204"},[950,952],"[USER]"]