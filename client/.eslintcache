[{"C:\\_MyProjects\\cryptoda\\client\\src\\App.js":"1","C:\\_MyProjects\\cryptoda\\client\\src\\redux\\reducers\\index.js":"2","C:\\_MyProjects\\cryptoda\\client\\src\\redux\\actions\\testConfigs.js":"3","C:\\_MyProjects\\cryptoda\\client\\src\\components\\listingTable.js":"4","C:\\_MyProjects\\cryptoda\\client\\src\\reportWebVitals.js":"5","C:\\_MyProjects\\cryptoda\\client\\src\\pages\\Rates.page.js":"6","C:\\_MyProjects\\cryptoda\\client\\src\\components\\Test.component.js":"7","C:\\_MyProjects\\cryptoda\\client\\src\\redux\\actions\\types.js":"8","C:\\_MyProjects\\cryptoda\\client\\src\\pages\\Portfolio.page.js":"9","C:\\_MyProjects\\cryptoda\\client\\src\\layout-parts\\Main.layoutpart.js":"10","C:\\_MyProjects\\cryptoda\\client\\src\\index.js":"11"},{"size":545,"mtime":1612261304637,"results":"12","hashOfConfig":"13"},{"size":138,"mtime":1612256236016,"results":"14","hashOfConfig":"13"},{"size":98,"mtime":1612256425356,"results":"15","hashOfConfig":"13"},{"size":9534,"mtime":1612346392223,"results":"16","hashOfConfig":"13"},{"size":362,"mtime":1606206756018,"results":"17","hashOfConfig":"13"},{"size":1128,"mtime":1612900887954,"results":"18","hashOfConfig":"13"},{"size":115,"mtime":1612816706579,"results":"19","hashOfConfig":"13"},{"size":35,"mtime":1612256373193,"results":"20","hashOfConfig":"13"},{"size":3043,"mtime":1612972993853,"results":"21","hashOfConfig":"13"},{"size":600,"mtime":1612816680488,"results":"22","hashOfConfig":"13"},{"size":755,"mtime":1612899905887,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"66gjgi",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\_MyProjects\\cryptoda\\client\\src\\App.js",["49"],"import React from 'react';\nimport MainLayoutPart from './layout-parts/Main.layoutpart';\nimport { Container, Row, Col } from 'reactstrap';\nimport LeftSidebarRedux from './redux/containers/test.redux';\nimport LeftSidebarLayoutPart from './layout-parts/LeftSidebar.layoutpart';\n\nconst App = () => (\n  <div>\n    <Container fluid={true} >\n      <Row>\n        <Col sm=\"2\">\n          <LeftSidebarLayoutPart />\n        </Col>\n        <Col sm=\"10\">\n          <MainLayoutPart />\n        </Col>\n      </Row>\n    </Container>\n  </div>\n)\n\nexport default App;",["50","51"],"C:\\_MyProjects\\cryptoda\\client\\src\\redux\\reducers\\index.js",[],"C:\\_MyProjects\\cryptoda\\client\\src\\redux\\actions\\testConfigs.js",[],"C:\\_MyProjects\\cryptoda\\client\\src\\components\\listingTable.js",["52"],"C:\\_MyProjects\\cryptoda\\client\\src\\reportWebVitals.js",[],["53","54"],"C:\\_MyProjects\\cryptoda\\client\\src\\pages\\Rates.page.js",["55"],"C:\\_MyProjects\\cryptoda\\client\\src\\components\\Test.component.js",[],"C:\\_MyProjects\\cryptoda\\client\\src\\redux\\actions\\types.js",[],"C:\\_MyProjects\\cryptoda\\client\\src\\pages\\Portfolio.page.js",["56","57"],"C:\\_MyProjects\\cryptoda\\client\\src\\layout-parts\\Main.layoutpart.js",["58"],"C:\\_MyProjects\\cryptoda\\client\\src\\index.js",[],{"ruleId":"59","severity":1,"message":"60","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":24},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":51,"column":13,"nodeType":"69","endLine":51,"endColumn":16},{"ruleId":"63","replacedBy":"70"},{"ruleId":"65","replacedBy":"71"},{"ruleId":"59","severity":1,"message":"72","line":14,"column":11,"nodeType":"61","messageId":"62","endLine":14,"endColumn":18},{"ruleId":"59","severity":1,"message":"73","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":36,"column":16,"nodeType":"76","endLine":41,"endColumn":11},{"ruleId":"59","severity":1,"message":"77","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":17},"no-unused-vars","'LeftSidebarRedux' is defined but never used.","Identifier","unusedVar","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["78"],["79"],"'fetchId' is assigned a value but never used.","'_fetchData' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'zabo' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression","'TestRedux' is defined but never used.","no-global-assign","no-unsafe-negation"]