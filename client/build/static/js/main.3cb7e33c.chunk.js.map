{"version":3,"sources":["redux/actions/types.js","redux/containers/test.redux.js","redux/actions/testConfigs.js","components/Test.component.js","pages/Home.page.js","components/rates.table.js","pages/Rates.page.js","components/portfolio.table.js","pages/Portfolio.page.js","components/ResizableBox.js","pages/PortfolioHistory.page.js","components/investments.table.js","pages/Investments.page.js","components/balancer.table.js","pages/DCAConfig.page.js","components/wallets.table.js","pages/WalletsConfig.page.js","layout-parts/Main.js","layout-parts/Navigation.js","layout-parts/ContextMenu.js","App.js","reportWebVitals.js","redux/reducers/testReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["SET_TEST","connect","state","test","testConfigs","dispatch","onSetTest","type","Home","Row","Col","defaultPropGetter","ListingTable","data","fetchData","loading","controlledPageCount","pageCount","getCellProps","columns","React","useMemo","Header","accessor","Cell","row","href","values","symbol","name","value","displayType","thousandSeparator","prefix","circulating_supply","total_supply","max_supply","decimalScale","suffix","useTable","initialState","pageIndex","manualPagination","usePagination","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","setPageSize","pageSize","useEffect","className","size","map","headerGroup","getHeaderGroupProps","headers","column","scope","getHeaderProps","render","i","getRowProps","cells","cell","id","colSpan","length","Progress","min","max","class","role","aria-label","onClick","disabled","defaultValue","onChange","e","target","Number","style","width","RatesComponent","useState","listingsData","setListingsData","setLoading","setPageCount","fetchIdRef","useRef","useCallback","a","current","axios","get","params","listings","Math","ceil","TEXT_COLORS","walletColors","Map","symbolColors","walletIdx","symbolIdx","PortfolioTable","has","set","Portfolio","portfolio","setPortfolio","totalInUsd","setTotalInUsd","totalInEur","setTotalInEur","zabo","console","log","resp","totInUsd","totInEur","entity","value_in_USD","value_in_EUR","getData","Zabo","init","clientId","config","live","env","Button","color","provider","onConnection","account","post","userId","respZaboUser","onError","error","ResizableBox","children","height","resizable","historyInUsd","setHistoryInUsd","historyInEur","setHistoryInEur","origHistInUsd","el","timestamp","portfolio_in_USD","downSampledHistInUsd","LTTB","chartHistInUsd","thisDate","Date","setMinutes","setSeconds","setMilliseconds","primary","secondary","origHistInEur","portfolio_in_EUR","downSampledHistInEur","chartHistInEur","label","series","showPoints","axes","position","tooltip","toColors","toIdx","InvestmentsTable","Investments","investments","setInvestments","total","setTotal","amount","setAmount","currency","setCurrency","to","setTo","investmentDate","setInvestmentDate","addInvestmentResponse","setAddInvestmentResponse","addInvestment","resp1","rates","resp2","invs","tot","inv","rate","push","Jumbotron","Form","FormGroup","Label","for","Input","placeholder","selected","date","colors","idx","BalancerTable","DCAConfig","setConfig","entries","setEntries","dcaConfig","check","checked","is_enabled","form","md","amount_to_spend","currency_to_spend","buying_frequency","exchange_to_use","strategy_to_use","block","defaultColumn","initialValue","index","updateMyData","setValue","onBlur","WalletsTable","skipPageReset","autoResetPage","WalletsConfig","userWallets","setUserWallets","supportedWallets","setSupportedWallets","originalData","setSkipPageReset","rowIndex","columnId","old","JSON","stringify","Main","exact","path","component","HomePage","RatesPage","PortfolioPage","PortfolioHistoryPage","InvestmentsPage","DCAConfigPage","WalletsConfigPage","Navigation","props","isOpen","setIsOpen","Navbar","dark","expand","NavbarBrand","tag","Link","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","ContextMenu","Component","App","Container","fluid","sm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","combineReducers","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.3cb7e33c.chunk.js","sourcesContent":["export const SET_TEST = \"SET_TEST\";","import { connect } from 'react-redux'\r\nimport TestComponent from \"../../components/Test.component\"\r\nimport { setTest } from '../actions/testConfigs';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    test: state.testConfigs.test\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSetTest: () => {\r\n      dispatch(setTest());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TestComponent)","import {\r\n  SET_TEST\r\n} from \"./types\"\r\n\r\nexport const setTest = () => ({\r\n  type: SET_TEST\r\n});\r\n","export default function TestComponent () {\r\n  return (\r\n    <>\r\n      <h1>TTETSTTSTSTSTSTSTST</h1>\r\n    </>\r\n  )\r\n}","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\"\r\nimport { Form, FormGroup, Label, Input, Row, Col, Button, Jumbotron } from 'reactstrap'\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function Home() {\r\n  \r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h1>HomePage</h1>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTable, usePagination } from 'react-table'\r\nimport NumberFormat from 'react-number-format';\r\nimport { Progress } from 'reactstrap';\r\n\r\n// Create a default prop getter\r\nconst defaultPropGetter = () => ({})\r\n\r\nexport default function ListingTable({ data, fetchData, loading, pageCount: controlledPageCount, getCellProps = defaultPropGetter }) {\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Rank',\r\n        accessor: 'cmc_rank'\r\n      },\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name', // accessor is the \"key\" in the data\r\n        Cell: ({ row }) => (\r\n          <Link href={`/cryptos/${row.values.symbol}`}>\r\n            <a>{row.values.name}</a>\r\n          </Link>\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Symbol',\r\n        accessor: 'symbol',\r\n      },\r\n      {\r\n        Header: 'Market capitalization',\r\n        accessor: 'quote.USD.market_cap',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['quote.USD.market_cap']} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Circulating supply',\r\n        accessor: 'circulating_supply',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values.circulating_supply} displayType={'text'} thousandSeparator={true} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Total supply',\r\n        accessor: 'total_supply',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values.total_supply} displayType={'text'} thousandSeparator={true} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Max supply',\r\n        accessor: 'max_supply',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values.max_supply} displayType={'text'} thousandSeparator={true} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Price',\r\n        accessor: 'quote.USD.price',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['quote.USD.price']} displayType={'text'} thousandSeparator={true} prefix={'$'} decimalScale={2} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Volume 24h',\r\n        accessor: 'quote.USD.volume_24h',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['quote.USD.volume_24h']} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n        },\r\n      },\r\n      {\r\n        Header: '%1h',\r\n        accessor: 'quote.USD.percent_change_1h',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['quote.USD.percent_change_1h']} displayType={'text'} thousandSeparator={true} suffix={'%'} decimalScale={2} />\r\n        },\r\n      },\r\n      {\r\n        Header: '%24h',\r\n        accessor: 'quote.USD.percent_change_24h',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['quote.USD.percent_change_24h']} displayType={'text'} thousandSeparator={true} prefix={'%'} decimalScale={2} />\r\n        },\r\n      },\r\n      {\r\n        Header: '%7d',\r\n        accessor: 'quote.USD.percent_change_7d',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['quote.USD.percent_change_7d']} displayType={'text'} thousandSeparator={true} prefix={'%'} decimalScale={2} />\r\n        },\r\n      }\r\n    ],\r\n    []\r\n  )\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    // Get the state from the instance\r\n    state: { pageIndex, pageSize },\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n    initialState: { pageIndex: 0 }, // Pass our hoisted table state\r\n    manualPagination: true, // Tell the usePagination\r\n    // hook that we'll handle our own data fetching\r\n    // This means we'll also have to provide our own\r\n    // pageCount.\r\n    pageCount: controlledPageCount,\r\n  },\r\n    usePagination\r\n  )\r\n\r\n  // Listen for changes in pagination and use the state to fetch our new data\r\n  useEffect(() => {\r\n    fetchData({ pageIndex, pageSize })\r\n  }, [fetchData, pageIndex, pageSize])\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      {/*<pre>\r\n        <code>\r\n          {JSON.stringify(\r\n            {\r\n              pageIndex,\r\n              pageSize,\r\n              pageCount,\r\n              canNextPage,\r\n              canPreviousPage,\r\n            },\r\n            null,\r\n            2\r\n          )}\r\n        </code>\r\n          </pre>*/}\r\n      <div>\r\n        <table {...getTableProps()} className=\"table table-hover\" size=\"small\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th scope=\"col\" {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr className=\"table-primary\" {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps([\r\n                      {\r\n                        className:\r\n                          cell.column.id === 'symbol' ? \"text-info\"\r\n                            : cell.column.id === 'quote.USD.price' ? \"text-info\"\r\n                              : cell.column.id === 'quote.USD.percent_change_1h' ? cell.value >= 0 ? \"text-success\" : \"text-danger\"\r\n                                : cell.column.id === 'quote.USD.percent_change_24h' ? cell.value >= 0 ? \"text-success\" : \"text-danger\"\r\n                                  : cell.column.id === 'quote.USD.percent_change_7d' ? cell.value >= 0 ? \"text-success\" : \"text-danger\"\r\n                                    : cell.column.className\r\n                      },\r\n                      getCellProps(cell),\r\n                    ])}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n            <tr>\r\n              {loading ? (\r\n                // Use our custom loading state to show a loading indicator\r\n                <td colSpan=\"10000\">Loading...</td>\r\n              ) : (\r\n                <td colSpan=\"10000\">\r\n                  Showing {page.length} of ~{controlledPageCount * pageSize}{' '}\r\n                results\r\n                </td>\r\n              )}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div>\r\n        <div className=\"text-center\">Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong></div>\r\n        <Progress min={0} value={pageIndex + 1} max={pageOptions.length} />\r\n      </div>\r\n\r\n      <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>{`<<`}</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>{`<`}</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => nextPage()} disabled={!canNextPage}>{`>`}</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>{`>>`}</button>\r\n      </div>\r\n      <span>\r\n        {' '}| Go to page:{' '}\r\n        <input\r\n          type=\"number\"\r\n          defaultValue={pageIndex + 1}\r\n          onChange={e => {\r\n            const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n            gotoPage(page)\r\n          }}\r\n          style={{ width: '100px' }}\r\n        />\r\n      </span>{' '}\r\n      <select\r\n        value={pageSize}\r\n        onChange={e => {\r\n          setPageSize(Number(e.target.value))\r\n        }}\r\n      >\r\n        {[10, 20, 30, 40, 50].map(pageSize => (\r\n          <option key={pageSize} value={pageSize}>\r\n            Show {pageSize}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n    </>\r\n  )\r\n}","import { React, useCallback, useRef, useState } from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport axios from 'axios'\r\nimport RatesTable from '../components/rates.table'\r\n\r\nexport default function RatesComponent() {\r\n\r\n  const [listingsData, setListingsData] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [pageCount, setPageCount] = useState(0)\r\n  const fetchIdRef = useRef(0)\r\n\r\n  const fetchData = useCallback(async ({ pageSize, pageIndex }) => {\r\n    const fetchId = ++fetchIdRef.current\r\n    setLoading(true);\r\n    const listings = await axios.get('api/rates', {\r\n      params: {\r\n        pageIndex,\r\n        pageSize\r\n      }\r\n    });\r\n    setListingsData(listings.data);\r\n    setPageCount(Math.ceil(1000 / pageSize));\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h1>Today's Cryptocurrency Prices by Market Cap</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <RatesTable data={listingsData} fetchData={fetchData} loading={loading} pageCount={pageCount} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { useTable } from 'react-table'\r\nimport NumberFormat from 'react-number-format';\r\n\r\n// Create a default prop getter\r\nconst defaultPropGetter = () => ({})\r\n\r\nconst TEXT_COLORS = [\r\n  //\"text-muted\",\r\n  //\"text-primary\",\r\n  \"text-secondary\",\r\n  \"text-warning\",\r\n  \"text-danger\",\r\n  \"text-success\",\r\n  \"text-info\"\r\n];\r\n\r\nlet walletColors = new Map();\r\nlet symbolColors = new Map();\r\nlet walletIdx = 0;\r\nlet symbolIdx = 0;\r\n\r\nexport default function PortfolioTable({ data, loading, getCellProps = defaultPropGetter }) {\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Wallet',\r\n        accessor: 'type'\r\n      },\r\n      {\r\n        Header: 'Symbol',\r\n        accessor: 'symbol'\r\n      },\r\n      {\r\n        Header: 'Balance',\r\n        accessor: 'balance', // accessor is the \"key\" in the data\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['balance']} displayType={'text'} thousandSeparator={true} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Price in USD',\r\n        accessor: 'price_in_USD',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['price_in_USD']} displayType={'text'} thousandSeparator={true} prefix={'$'} decimalScale={2} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Value in USD',\r\n        accessor: 'value_in_USD',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['value_in_USD']} displayType={'text'} thousandSeparator={true} prefix={'$'} decimalScale={2} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Price in EUR',\r\n        accessor: 'price_in_EUR',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['price_in_EUR']} displayType={'text'} thousandSeparator={true} suffix={' EUR'} decimalScale={2} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Value in EUR',\r\n        accessor: 'value_in_EUR',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['value_in_EUR']} displayType={'text'} thousandSeparator={true} suffix={' EUR'} decimalScale={2} />\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow\r\n  } = useTable({\r\n    columns,\r\n    data\r\n  })\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <div>\r\n        <table {...getTableProps()} className=\"table table-hover\" size=\"small\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th scope=\"col\" {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr className=\"table-primary\" {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps([\r\n                      {\r\n                        className:\r\n                          cell.column.id === 'type' ? (() => {\r\n                            if (!walletColors.has(cell.value)) {\r\n                              walletColors.set(cell.value, TEXT_COLORS[walletIdx++])\r\n                              if (walletIdx > TEXT_COLORS.length - 1) {\r\n                                walletIdx = 0;\r\n                              }\r\n                            }\r\n                            return walletColors.get(cell.value);\r\n                          })()\r\n                            : cell.column.id === 'symbol' ? (() => {\r\n                              if (!symbolColors.has(cell.value)) {\r\n                                symbolColors.set(cell.value, TEXT_COLORS[symbolIdx++])\r\n                                if (symbolIdx > TEXT_COLORS.length - 1) {\r\n                                  symbolIdx = 0;\r\n                                }\r\n                              }\r\n                              return symbolColors.get(cell.value);\r\n                            })()\r\n                              : cell.column.id === 'value_in_USD' ? \"text-success\"\r\n                                : cell.column.id === 'value_in_EUR' ? \"text-success\"\r\n                                  : cell.column.className\r\n                      },\r\n                      getCellProps(cell),\r\n                    ])}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n            <tr>\r\n              {loading && (\r\n                // Use our custom loading state to show a loading indicator\r\n                <td colSpan=\"10000\">Loading...</td>\r\n              )}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  )\r\n}","import axios from \"axios\";\r\nimport { useEffect, useRef, useState, useMemo } from \"react\"\r\nimport { Row, Col, Button } from 'reactstrap'\r\nimport Zabo from 'zabo-sdk-js'\r\nimport config from '../config.json'\r\nimport PortfolioTable from '../components/portfolio.table'\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport default function Portfolio() {\r\n  const [portfolio, setPortfolio] = useState([]);\r\n  const [totalInUsd, setTotalInUsd] = useState(0);\r\n  const [totalInEur, setTotalInEur] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const THIS_USER = 'myliveuser';\r\n  //const THIS_USER = 'mysandboxuser';\r\n\r\n  let zabo = useRef();\r\n\r\n  useEffect(() => {\r\n    console.log(`useEffect 1 called...`);\r\n    setLoading(true);\r\n    const getData = async () => {\r\n      const resp = await axios.get('api/portfolio');\r\n      let totInUsd = 0;\r\n      let totInEur = 0;\r\n      for (const entity of resp.data) {\r\n        totInUsd += Number(entity.value_in_USD);\r\n        totInEur += Number(entity.value_in_EUR);\r\n      }\r\n      setPortfolio(resp.data);\r\n      setTotalInUsd(totInUsd);\r\n      setTotalInEur(totInEur);\r\n    }\r\n    getData();\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(`useEffect 2 called...`);\r\n    const getData = async () => {\r\n      // TODO: fix this, now zabo user is recreated every time the button is clicked\r\n      //const respUserExists = await axios.get(`api/zabo/zabo-user-exists?userId=${THIS_USER}`);\r\n      //if (!respUserExists.data) {\r\n      console.log('init zabo')\r\n      zabo.current = await Zabo.init({\r\n        //clientId: config.zabo.sandbox.clientId,\r\n        //env: 'sandbox'\r\n        clientId: config.zabo.live.clientId,\r\n        env: 'live'\r\n      });\r\n      //}\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  function zaboConnectToProvider(e) {\r\n    zabo.current.connect({ provider: 'blockFi' }).onConnection(async (account) => {\r\n      const respZaboUser = await axios.post('api/zabo/create-zabo-user', { userId: THIS_USER, account: account });\r\n      console.log('Created user: ', respZaboUser.data);\r\n      const forcePortfolioUpdateResp = await axios.post('/api/portfolio', {});\r\n      console.log('Portfolio update run');\r\n    }).onError(error => {\r\n      console.error('account connection error:', error)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h1>Current Portfolio</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div class=\"alert alert-success\">\r\n            <p>Total balance in USD: <strong><NumberFormat value={totalInUsd} displayType={'text'} thousandSeparator={true} prefix={'$'} decimalScale={2} /></strong></p>\r\n            <p>Total balance in Euro: <strong><NumberFormat value={totalInEur} displayType={'text'} thousandSeparator={true} suffix={' EUR'} decimalScale={2} /></strong></p>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Button color=\"primary\" onClick={zaboConnectToProvider}>Connect to Zabo for BlockFi access</Button>\r\n        </Col>\r\n      </Row>\r\n      <PortfolioTable data={portfolio} loading={loading} />\r\n    </>\r\n  )\r\n}","import React from \"react\";\r\nimport { ResizableBox as ReactResizableBox } from \"react-resizable\";\r\n\r\nimport \"react-resizable/css/styles.css\";\r\n\r\nexport default function ResizableBox({\r\n  children,\r\n  width = 1000,\r\n  height = 600,\r\n  resizable = true,\r\n  style = {},\r\n  className\r\n}) {\r\n  return (\r\n    <div>\r\n      {resizable ? (\r\n        <ReactResizableBox width={width} height={height}>\r\n          <div\r\n            style={{\r\n              ...style,\r\n              width: \"100%\",\r\n              height: \"100%\"\r\n            }}\r\n            className={className}\r\n          >\r\n            {children}\r\n          </div>\r\n        </ReactResizableBox>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            width: `${width}px`,\r\n            height: `${height}px`,\r\n            ...style\r\n          }}\r\n          className={className}\r\n        >\r\n          {children}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { useEffect, useState, useMemo } from \"react\"\r\nimport { Row, Col } from 'reactstrap'\r\nimport { Chart } from \"react-charts\";\r\nimport ResizableBox from \"../components/ResizableBox\";\r\nimport { LTTB } from 'downsample';\r\n\r\nexport default function Portfolio() {\r\n  const [historyInUsd, setHistoryInUsd] = useState([]);\r\n  const [historyInEur, setHistoryInEur] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const THIS_USER = 'myliveuser';\r\n  //const THIS_USER = 'mysandboxuser';\r\n\r\n  useEffect(() => {\r\n    console.log(`useEffect 1 called...`);\r\n    setLoading(true);\r\n    const getData = async () => {\r\n      const resp = await axios.get('api/portfolio/history');\r\n      // in USD\r\n      const origHistInUsd = resp.data.map(el => {\r\n        return [el.timestamp, el.portfolio_in_USD ]\r\n      });\r\n      const downSampledHistInUsd = LTTB(origHistInUsd, 10);\r\n      const chartHistInUsd = downSampledHistInUsd.map(el => {\r\n        const thisDate = new Date(el[0]);\r\n        thisDate.setMinutes(0);\r\n        thisDate.setSeconds(0);\r\n        thisDate.setMilliseconds(0);\r\n        return { primary: thisDate, secondary: el[1] }\r\n      });\r\n      setHistoryInUsd(chartHistInUsd);\r\n      // in EUR\r\n      const origHistInEur = resp.data.map(el => {\r\n        return [el.timestamp, el.portfolio_in_EUR ]\r\n      });\r\n      const downSampledHistInEur = LTTB(origHistInEur, 10);\r\n      const chartHistInEur = downSampledHistInEur.map(el => {\r\n        const thisDate = new Date(el[0]);\r\n        thisDate.setMinutes(0);\r\n        thisDate.setSeconds(0);\r\n        thisDate.setMilliseconds(0);\r\n        return { primary: thisDate, secondary: el[1] }\r\n      });\r\n      setHistoryInEur(chartHistInEur);\r\n    }\r\n    getData();\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const data = useMemo(\r\n    () => [\r\n      {\r\n        label: 'USD price',\r\n        data: historyInUsd\r\n      },\r\n      {\r\n        label: 'EUR price',\r\n        data: historyInEur\r\n      }\r\n    ],\r\n    [historyInUsd, historyInEur]\r\n  )\r\n\r\n  const series = useMemo(\r\n    () => ({\r\n      showPoints: true,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const axes = useMemo(\r\n    () => [\r\n      { primary: true, type: 'time', position: 'bottom' },\r\n      { type: 'linear', position: 'left' },\r\n    ],\r\n    []\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h1>Portfolio History</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {historyInUsd.length > 0 && historyInEur.length > 0 && <ResizableBox>\r\n            <Chart data={data} series={series} axes={axes} tooltip />\r\n          </ResizableBox>}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { useTable } from 'react-table'\r\nimport NumberFormat from 'react-number-format';\r\n\r\n// Create a default prop getter\r\nconst defaultPropGetter = () => ({})\r\n\r\nconst TEXT_COLORS = [\r\n  //\"text-muted\",\r\n  //\"text-primary\",\r\n  \"text-secondary\",\r\n  \"text-warning\",\r\n  \"text-danger\",\r\n  \"text-success\",\r\n  \"text-info\"\r\n];\r\n\r\nlet toColors = new Map();\r\nlet toIdx = 0;\r\n\r\nexport default function InvestmentsTable({ data, loading, getCellProps = defaultPropGetter }) {\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'To',\r\n        accessor: 'to'\r\n      },\r\n      {\r\n        Header: 'Amount',\r\n        accessor: 'amount', // accessor is the \"key\" in the data\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['amount']} displayType={'text'} thousandSeparator={true} decimalScale={2} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Currency',\r\n        accessor: 'currency'\r\n      },\r\n      {\r\n        Header: 'in USD',\r\n        accessor: 'inUSD', // accessor is the \"key\" in the data\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['inUSD']} displayType={'text'} thousandSeparator={true} decimalScale={2} prefix={'$'} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Timestamp',\r\n        accessor: 'timestamp'\r\n      }\r\n    ],\r\n    []\r\n  )\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow\r\n  } = useTable({\r\n    columns,\r\n    data\r\n  })\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <div>\r\n        <table {...getTableProps()} className=\"table table-hover\" size=\"small\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th scope=\"col\" {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr className=\"table-primary\" {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps([\r\n                      {\r\n                        className: cell.column.id === 'to' ? (() => {\r\n                          if (!toColors.has(cell.value)) {\r\n                            toColors.set(cell.value, TEXT_COLORS[toIdx++])\r\n                            if (toIdx > TEXT_COLORS.length - 1) {\r\n                              toIdx = 0;\r\n                            }\r\n                          }\r\n                          return toColors.get(cell.value);\r\n                        })()\r\n                          : cell.column.id === 'amount' ? \"text-info\"\r\n                            : cell.column.id === 'inUSD' ? \"text-success\"\r\n                              : cell.column.className\r\n                      },\r\n                      getCellProps(cell),\r\n                    ])}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n            <tr>\r\n              {loading && (\r\n                // Use our custom loading state to show a loading indicator\r\n                <td colSpan=\"10000\">Loading...</td>\r\n              )}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  )\r\n}","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\"\r\nimport { Form, FormGroup, Label, Input, Row, Col, Button, Jumbotron } from 'reactstrap'\r\n//import config from '../config.json'\r\nimport InvestmentsTable from '../components/investments.table'\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function Investments() {\r\n  const [investments, setInvestments] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [amount, setAmount] = useState(0);\r\n  const [currency, setCurrency] = useState('EUR');\r\n  const [to, setTo] = useState('binance');\r\n  const [investmentDate, setInvestmentDate] = useState(new Date());\r\n  const [addInvestmentResponse, setAddInvestmentResponse] = useState(false);\r\n\r\n  //const THIS_USER = 'myliveuser';\r\n  //const THIS_USER = 'mysandboxuser';\r\n  const addInvestment = async () => {\r\n    const resp = await axios.post('api/portfolio/investment', { amount: amount, currency: currency, to: to, timestamp: investmentDate })\r\n    setAddInvestmentResponse(resp.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(`useEffect 1 called...`);\r\n    setLoading(true);\r\n    const getData = async () => {\r\n      const resp1 = await axios.get('http://api.exchangeratesapi.io/latest?symbols=USD,EUR,RON&access_key=17881812858dd74e212685251cfffebf');\r\n      console.log(resp1.data);\r\n      const rates = resp1.data.rates;\r\n      const resp2 = await axios.get('api/portfolio/investment');\r\n      let invs = [], tot = 0;\r\n      for (const entity of resp2.data) {\r\n        let inv = entity;\r\n        let rate = rates[entity.currency] / rates['USD'];\r\n        inv['inUSD'] = Number(entity.amount) / rate;\r\n        invs.push(inv)\r\n        tot += inv['inUSD'];\r\n      }\r\n      setInvestments(invs);\r\n      setTotal(tot);\r\n    }\r\n    getData();\r\n    setLoading(false);\r\n  }, [addInvestmentResponse]);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h1>Investments</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div class=\"alert alert-success\">\r\n            Total invested: <strong><NumberFormat value={total} displayType={'text'} thousandSeparator={true} prefix={'$'} decimalScale={2} /></strong>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <InvestmentsTable data={investments} loading={loading} />\r\n      <Jumbotron>\r\n        <Form>\r\n          <FormGroup>\r\n            <Label for=\"amount\">Amount</Label>\r\n            <Input type=\"number\" name=\"amount\" id=\"amount\" placeholder=\"0\" value={amount} onChange={e => setAmount(e.target.value)} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"currency\">Currency</Label>\r\n            <Input type=\"currency\" name=\"text\" id=\"currency\" placeholder=\"EUR\" value={currency} onChange={e => setCurrency(e.target.value)} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"to\">To</Label>\r\n            <Input type=\"to\" name=\"text\" id=\"to\" placeholder=\"Binance\" value={to} onChange={e => setTo(e.target.value)} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"investmentDate\">Investment date</Label>\r\n            <DatePicker selected={investmentDate} onChange={date => setInvestmentDate(date)} />\r\n          </FormGroup>\r\n          <Button onClick={addInvestment}>Add investment</Button>\r\n        </Form>\r\n      </Jumbotron>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { useTable } from 'react-table'\r\nimport NumberFormat from 'react-number-format';\r\n\r\n// Create a default prop getter\r\nconst defaultPropGetter = () => ({})\r\n\r\nconst TEXT_COLORS = [\r\n  //\"text-muted\",\r\n  //\"text-primary\",\r\n  \"text-secondary\",\r\n  \"text-warning\",\r\n  \"text-danger\",\r\n  \"text-success\",\r\n  \"text-info\"\r\n];\r\n\r\nlet colors = new Map();\r\nlet idx = 0;\r\n\r\nexport default function BalancerTable({ data, loading, getCellProps = defaultPropGetter }) {\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'currency'\r\n      },\r\n      {\r\n        Header: 'Quantity to buy',\r\n        accessor: 'quantityToBuy'\r\n      },\r\n      {\r\n        Header: 'Current price',\r\n        accessor: 'currentPrice', // accessor is the \"key\" in the data\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['currentPrice']} displayType={'text'} thousandSeparator={true} prefix={'$'} decimalScale={2} />\r\n        },\r\n      },\r\n      {\r\n        Header: 'Adjusted percent',\r\n        accessor: 'percent',\r\n        Cell: ({ row }) => {\r\n          return <NumberFormat value={row.values['percent']} displayType={'text'} thousandSeparator={true} decimalScale={3} />\r\n        }\r\n      }\r\n    ],\r\n    []\r\n  )\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow\r\n  } = useTable({\r\n    columns,\r\n    data\r\n  })\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <div>\r\n        <table {...getTableProps()} className=\"table table-hover\" size=\"small\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th scope=\"col\" {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr className=\"table-primary\" {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps([\r\n                      {\r\n                        className:\r\n                          cell.column.id === 'name' ? (() => {\r\n                            if (!colors.has(cell.value)) {\r\n                              colors.set(cell.value, TEXT_COLORS[idx++])\r\n                              if (idx > TEXT_COLORS.length - 1) {\r\n                                idx = 0;\r\n                              }\r\n                            }\r\n                            return colors.get(cell.value);\r\n                          })()\r\n                            : cell.column.className\r\n                      },\r\n                      getCellProps(cell),\r\n                    ])}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n            <tr>\r\n              {loading && (\r\n                // Use our custom loading state to show a loading indicator\r\n                <td colSpan=\"10000\">Loading...</td>\r\n              )}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  )\r\n}","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\"\r\nimport { Form, FormGroup, Label, Input, Row, Col, Button, Jumbotron, Container } from 'reactstrap'\r\nimport BalancerTable from \"../components/balancer.table\";\r\n\r\nexport default function DCAConfig() {\r\n  const [config, setConfig] = useState({});\r\n  const [entries, setEntries] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(`useEffect 1 called...`);\r\n    setLoading(true);\r\n    const getData = async () => {\r\n      const resp1 = await axios.get('api/dca/config');\r\n      console.log(resp1.data);\r\n      setConfig(resp1.data.dcaConfig);\r\n      setEntries(resp1.data.entries);\r\n    }\r\n    getData();\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h1>Fiat currency cost averaging configuration</h1>\r\n        </Col>\r\n      </Row>\r\n      <Form>\r\n        <h3>Configure bot</h3>\r\n        <FormGroup check>\r\n          <Input type=\"checkbox\" name=\"enable-bot-check\" id=\"enable-bot-check\" checked={config.is_enabled} />\r\n          <Label for=\"enable-bot-check\" check>Enable bot</Label>\r\n        </FormGroup>\r\n        <Row form>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label for=\"amount-to-spend\">Amount to spend</Label>\r\n              <Input type=\"number\" name=\"amount-to-spend\" id=\"amount-to-spend\" value={config.amount_to_spend} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label for=\"currency-to-spend\">Currency to spend</Label>\r\n              <Input type=\"text\" name=\"currency-to-spend\" id=\"currency-to-spend\" value={config.currency_to_spend} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label for=\"buying-frequency\">Buying frequency</Label>\r\n              <Input type=\"text\" name=\"buying-frequency\" id=\"buying-frequency\" value={config.buying_frequency} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label for=\"exchange-to-use\">Exchange to use</Label>\r\n              <Input type=\"select\" name=\"select\" id=\"exchange-to-use\">\r\n                <option value=\"binance\" selected={config.exchange_to_use === 'binance'}>Binance</option>\r\n                <option value=\"coinbase\" selected={config.exchange_to_use === 'coinbase'}>Coinbase</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <h3>Configure buying strategy</h3>\r\n        <Row form>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label for=\"strategy\">Select strategy:</Label>\r\n              <Input type=\"select\" name=\"select\" id=\"strategy\">\r\n                <option value=\"top 5 crypto by market cap\" selected={config.strategy_to_use === 'top 5 crypto by market cap'}>Top 5 crypto by market cap</option>\r\n                <option value=\"selected cryptos\" selected={config.strategy_to_use === 'selected cryptos'}>Selected cryptos</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row form>\r\n          <Col md={3}>\r\n            <Button block color=\"primary\">Save configuration</Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <h4>Strategy current result:</h4>\r\n      <BalancerTable data={entries} loading={loading} />\r\n    </>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useTable, usePagination } from 'react-table'\r\nimport { Input, Progress } from 'reactstrap';\r\n\r\n// Create an editable cell renderer\r\nconst EditableCell = ({\r\n  value: initialValue,\r\n  row: { index },\r\n  column: { id },\r\n  updateMyData, // This is a custom function that we supplied to our table instance\r\n}) => {\r\n  // We need to keep and update the state of the cell normally\r\n  const [value, setValue] = useState(initialValue)\r\n\r\n  const onChange = e => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  // We'll only update the external data when the input is blurred\r\n  const onBlur = () => {\r\n    updateMyData(index, id, value)\r\n  }\r\n\r\n  // If the initialValue is changed external, sync it up with our state\r\n  useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n\r\n  return <Input value={value} onChange={onChange} onBlur={onBlur} />\r\n}\r\n\r\n// Set our editable cell renderer as the default Cell renderer\r\nconst defaultColumn = {\r\n  Cell: EditableCell,\r\n}\r\n\r\n// Be sure to pass our updateMyData and the skipPageReset option\r\nexport default function WalletsTable({ data, updateMyData, skipPageReset }) {\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'type'\r\n      },\r\n      {\r\n        Header: 'Address',\r\n        accessor: 'address'\r\n      },\r\n      {\r\n        Header: 'Api Key',\r\n        accessor: 'api_key', // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: 'Secret Key',\r\n        accessor: 'secret_key'\r\n      },\r\n      {\r\n        Header: 'Is CEX?',\r\n        accessor: 'is_cex'\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  // For this example, we're using pagination to illustrate how to stop\r\n  // the current page from resetting when our data changes\r\n  // Otherwise, nothing is different here.\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      // use the skipPageReset option to disable page resetting temporarily\r\n      autoResetPage: !skipPageReset,\r\n      // updateMyData isn't part of the API, but\r\n      // anything we put into these options will\r\n      // automatically be available on the instance.\r\n      // That way we can call this function from our\r\n      // cell renderer!\r\n      updateMyData,\r\n    },\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <div>\r\n        <table {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div>\r\n        <div className=\"text-center\">Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong></div>\r\n        <Progress min={0} value={pageIndex + 1} max={pageOptions.length} />\r\n      </div>\r\n\r\n      <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>{`<<`}</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>{`<`}</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => nextPage()} disabled={!canNextPage}>{`>`}</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>{`>>`}</button>\r\n      </div>\r\n      <span>\r\n        {' '}| Go to page:{' '}\r\n        <input\r\n          type=\"number\"\r\n          defaultValue={pageIndex + 1}\r\n          onChange={e => {\r\n            const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n            gotoPage(page)\r\n          }}\r\n          style={{ width: '100px' }}\r\n        />\r\n      </span>{' '}\r\n      <select\r\n        value={pageSize}\r\n        onChange={e => {\r\n          setPageSize(Number(e.target.value))\r\n        }}\r\n      >\r\n        {[10, 20, 30, 40, 50].map(pageSize => (\r\n          <option key={pageSize} value={pageSize}>\r\n            Show {pageSize}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  )\r\n}","import axios from \"axios\";\r\nimport { React, useEffect, useState } from \"react\"\r\nimport { Form, FormGroup, Label, Input, Row, Col, Button, Jumbotron } from 'reactstrap'\r\nimport NumberFormat from 'react-number-format';\r\nimport WalletsTable from '../components/wallets.table';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function WalletsConfig() {\r\n\r\n  const USER = `myliveuser`;\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [userWallets, setUserWallets] = useState([])\r\n  const [supportedWallets, setSupportedWallets] = useState([])\r\n\r\n  const [originalData] = useState(userWallets)\r\n  const [skipPageReset, setSkipPageReset] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const getData = async () => {\r\n      const resp = await axios.get(`api/wallet/user/${USER}`);\r\n      console.log(resp.data);\r\n      setUserWallets(resp.data);\r\n    }\r\n    getData();\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const getData = async () => {\r\n      const resp = await axios.get(`api/wallet/supported`);\r\n      setSupportedWallets(resp.data);\r\n    }\r\n    getData();\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // We need to keep the table from resetting the pageIndex when we\r\n  // Update data. So we can keep track of that flag with a ref.\r\n\r\n  // When our cell renderer calls updateMyData, we'll use\r\n  // the rowIndex, columnId and new value to update the\r\n  // original data\r\n  const updateMyData = (rowIndex, columnId, value) => {\r\n    // We also turn on the flag to not reset the page\r\n    setSkipPageReset(true)\r\n    setUserWallets(old =>\r\n      old.map((row, index) => {\r\n        if (index === rowIndex) {\r\n          return {\r\n            ...old[rowIndex],\r\n            [columnId]: value,\r\n          }\r\n        }\r\n        return row\r\n      })\r\n    )\r\n  }\r\n\r\n  // After data chagnes, we turn the flag back off\r\n  // so that if data actually changes when we're not\r\n  // editing it, the page is reset\r\n  useEffect(() => {\r\n    setSkipPageReset(false)\r\n  }, [userWallets])\r\n\r\n  // Let's add a data resetter/randomizer to help\r\n  // illustrate that flow...\r\n  const resetData = () => setUserWallets(originalData)\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h1>WalletPage</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <button onClick={resetData}>Reset Data</button>\r\n      </Row>\r\n      <WalletsTable\r\n        data={userWallets}\r\n        updateMyData={updateMyData}\r\n        skipPageReset={skipPageReset}\r\n      />\r\n      <Row>\r\n        <Col>\r\n          {JSON.stringify(userWallets)};\r\n        </Col>\r\n        <Col>\r\n          {JSON.stringify(supportedWallets)};\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport TestRedux from '../redux/containers/test.redux';\r\nimport { Row, Col } from 'reactstrap';\r\nimport './Main.css';\r\nimport HomePage from '../pages/Home.page';\r\nimport RatesPage from '../pages/Rates.page';\r\nimport PortfolioPage from '../pages/Portfolio.page';\r\nimport PortfolioHistoryPage from '../pages/PortfolioHistory.page';\r\nimport InvestmentsPage from '../pages/Investments.page';\r\nimport DCAConfigPage from '../pages/DCAConfig.page';\r\nimport WalletsConfigPage from '../pages/WalletsConfig.page';\r\n\r\nconst Main = () => (\r\n  <Row className='main'>\r\n    <Col>\r\n      <Switch>\r\n        <Route exact path='/' component={HomePage} />\r\n        <Route exact path='/rates' component={RatesPage} />\r\n        <Route exact path='/portfolio' component={PortfolioPage} />\r\n        <Route exact path='/portfolio-history' component={PortfolioHistoryPage} />\r\n        <Route exact path='/investments' component={InvestmentsPage} />\r\n        <Route exact path='/dca-config' component={DCAConfigPage} />\r\n        <Route exact path='/wallets-config' component={WalletsConfigPage} />\r\n      </Switch>\r\n    </Col>\r\n  </Row>\r\n)\r\n\r\nexport default Main;","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  UncontrolledDropdown,\r\n  DropdownToggle\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand tag={Link} to='/'>Cryptoda</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"me-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink tag={Link} to='rates'>Rates</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink tag={Link} to='investments'>Investments</NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Portfolio\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem tag={Link} to='portfolio'>\r\n                  Current\r\n                </DropdownItem>\r\n                <DropdownItem tag={Link} to='portfolio-history'>\r\n                  History\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Configs\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem tag={Link} to='dca-config'>\r\n                  Fiat Currency Cost Averaging\r\n                </DropdownItem>\r\n                <DropdownItem tag={Link} to='wallets-config'>\r\n                  Wallets\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { Row, Col, Button } from 'reactstrap';\r\nimport './ContextMenu.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ContextMenu extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className='left-sidebar-1'>\r\n          <Col>\r\n            \r\n          </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContextMenu;","import React from 'react';\nimport LeftSidebarRedux from './redux/containers/test.redux';\nimport { Container, Row, Col } from 'reactstrap';\nimport Main from './layout-parts/Main';\nimport Navigation from './layout-parts/Navigation';\nimport ContextMenu from './layout-parts/ContextMenu';\n\nconst App = () => (\n  <div>\n    <Navigation />\n    <Container fluid={true} >\n      <Row>\n        <Col sm=\"2\">\n          <ContextMenu />\n        </Col>\n        <Col sm=\"10\">\n          <Main />\n        </Col>\n      </Row>\n    </Container>\n  </div>\n)\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  SET_TEST\r\n} from \"../actions/types\";\r\n\r\nconst testConfigs = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SET_TEST:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default testConfigs","import { combineReducers } from 'redux';\r\nimport testConfigs from './testReducer';\r\n\r\nexport default combineReducers({\r\n  testConfigs\r\n});","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootswatch/dist/slate/bootstrap.min.css';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport { HashRouter } from 'react-router-dom';\n//import 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}